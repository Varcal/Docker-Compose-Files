version: '3.7'

services:  
  portainer:
    container_name: 'vs_portainer'
    image: portainer/portainer-ce
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - 9090:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - varcalsys-network
  
  keycloak:
    container_name: 'vs_keycloak'
    image: quay.io/keycloak/keycloak:12.0.3
    restart: always
    ports:
      - 8080:8080
    environment:
      KEYCLOAK_USER: "admin"
      KEYCLOAK_PASSWORD: "admin"
      DB_VENDOR: MSSQL
      DB_ADDR: sqlserver
      DB_DATABASE: keycloak
      DB_USER: sa
      DB_PASSWORD: Admin@123
    networks:
      - varcalsys-network

  sonarqube:
    container_name: 'vs_sonarqube'
    image: sonarqube:community
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgresql:5432/sonar
      SONAR_JDBC_USERNAME: postgres
      SONAR_JDBC_PASSWORD: Admin@123
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"
    networks:
      - varcalsys-network

volumes:
  portainer_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:

networks: 
  varcalsys-network: 
    name: varcalsys-network
    driver: bridge