version: '3.8'

services:  
  portainer:
    container_name: 'vs_portainer'
    image: portainer/portainer-ce
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - 9090:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - varcalsys-network
  
  keycloak:
    container_name: 'vs_keycloak'
    image: quay.io/keycloak/keycloak:24.0.4
    command: start-dev --http-port=8080
    restart: always
    ports:
      - 8080:8080
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: mssql
      KC_DB_URL: jdbc:sqlserver://sqlserver:1433;databaseName=KeycloakDb;encrypt=false
      KC_DB_USERNAME: sa
      KC_DB_PASSWORD: Admin@123
      KC_HOSTNAME: localhost
      KC_HOSTNAME_STRICT: false

      # Desativar XA e recovery COMPLETAMENTE
      KC_TRANSACTION_XA_ENABLED: false
      QUARKUS_TRANSACTION_MANAGER_ENABLE_RECOVERY: false
      QUARKUS_DATASOURCE_XA_ENABLED: false
    networks:
      - varcalsys-network



  sonarqube:
    container_name: 'vs_sonarqube'
    image: sonarqube:community
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgresql:5432/sonar
      SONAR_JDBC_USERNAME: postgres
      SONAR_JDBC_PASSWORD: Admin@123
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"
    networks:
      - varcalsys-network

volumes:
  portainer_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:

networks: 
  varcalsys-network: 
    name: varcalsys-network
    driver: bridge